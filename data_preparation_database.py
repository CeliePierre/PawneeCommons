# -*- coding: utf-8 -*-
"""Data-Preparation-Database.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EHa16HJFfG_BZxON7CLlOh_Pwss4rGX6
"""

import pandas as pd

# Replace 'parks_and_rec_episodes (2).csv' with the actual path to your CSV file
csv_file_path = 'parks_and_rec_episodes (2).csv'

# Read the CSV file into a DataFrame
df = pd.read_csv(csv_file_path)

# Create a new column 'Job Title' based on the source column
df['Job Title'] = df.apply(lambda row: 'Director' if pd.notna(row['directed_by']) else '', axis=1)

# Create a new column 'Person and Job' with combined information
df['Person and Job'] = df['directed_by'].fillna('')

# Drop rows where 'Person and Job' is empty
directors_df = df[df['Job Title'] == 'Director'][['Person and Job', 'Job Title']]

# Specify the path for the new CSV file
directors_csv_file_path = 'directors_output_file.csv'

# Save the DataFrame to a new CSV file
directors_df.to_csv(directors_csv_file_path, index=False)

print(f"Directors data has been extracted and saved to {directors_csv_file_path}")

import pandas as pd

# Replace 'parks_and_rec_episodes (2).csv' with the actual path to your CSV file
csv_file_path = 'parks_and_rec_episodes (2).csv'

# Read the CSV file into a DataFrame
df = pd.read_csv(csv_file_path)

# Create a new column 'Job Title' based on the source column
df['Job Title'] = df.apply(lambda row: 'Writer' if pd.notna(row['written_by']) else '', axis=1)

# Create a new column 'Person and Job' with combined information
df['Person and Job'] = df['written_by'].fillna('')

# Drop rows where 'Person and Job' is empty
writers_df = df[df['Job Title'] == 'Writer'][['Person and Job', 'Job Title']]

# Specify the path for the new CSV file
writers_csv_file_path = 'writers_output_file.csv'

# Save the DataFrame to a new CSV file
writers_df.to_csv(writers_csv_file_path, index=False)

print(f"Writers data has been extracted and saved to {writers_csv_file_path}")

import pandas as pd

# Replace with the actual paths to your CSV files
directors_csv_path = 'directors_output_file.csv'
writers_csv_path = 'writers_output_file.csv'

# Read the CSV files into DataFrames
directors_df = pd.read_csv(directors_csv_path)
writers_df = pd.read_csv(writers_csv_path)

# Concatenate the two DataFrames vertically
merged_df = pd.concat([directors_df, writers_df], ignore_index=True)

# Specify the path for the new CSV file
merged_csv_file_path = 'merged_output_file.csv'

# Save the merged DataFrame to a new CSV file
merged_df.to_csv(merged_csv_file_path, index=False)

print(f"Merged data has been saved to {merged_csv_file_path}")

#Person
import pandas as pd

# Replace 'merged_output_file.csv' with the actual path to your merged CSV file
csv_file_path = 'merged_output_file.csv'

# Read the CSV file into a DataFrame
df = pd.read_csv(csv_file_path)

# Split the 'Person and Job' column at the '&' character
df[['name', 'family']] = df['Person and Job'].str.split('&', n=1, expand=True)

# Identify records with additional data after '&'
additional_data_df = df[df['family'].str.contains('&', na=False)]

# Create a new DataFrame for the additional data
new_records_df = additional_data_df.copy()
new_records_df['family'] = new_records_df['family'].str.split('&').str[1]
new_records_df['name'] = new_records_df['name'] + new_records_df['family']

# Concatenate the original DataFrame with the new records DataFrame
df = pd.concat([df, new_records_df], ignore_index=True)

# Drop the 'namefamily' column
#df = df.drop(['namefamily'], axis=1)

# Specify the path for the new CSV file
new_csv_file_path = 'Person.csv'

# Save the updated DataFrame to a new CSV file
df.to_csv(new_csv_file_path, index=False)

print(f"Data has been extracted and saved to {new_csv_file_path}")

import pandas as pd

# Replace 'merged_output_file.csv' with the actual path to your merged CSV file
csv_file_path = 'merged_output_file.csv'

# Read the CSV file into a DataFrame
df = pd.read_csv(csv_file_path)

# Extract 'name' and 'family' from the 'Person and Job' column
df[['name', 'family']] = df['Person and Job'].str.split(n=1, expand=True)

# Identify rows where 'family' contains '&'
rows_with_ampersand = df['family'].str.contains('&', na=False)

# Create a new DataFrame for rows with '&' in 'family'
rows_with_ampersand_df = df.loc[rows_with_ampersand].copy()

# Extract characters after '&' in 'family'
rows_with_ampersand_df[['person_name', 'person_family']] = rows_with_ampersand_df['family'].str.split('&', n=1, expand=True)

# Replace the extracted characters with 'name' and 'family'
rows_with_ampersand_df['family'] = rows_with_ampersand_df['name'] + rows_with_ampersand_df['person_family']

# Drop unnecessary columns
rows_with_ampersand_df = rows_with_ampersand_df.drop(['Person and Job', 'name', 'person_name', 'person_family'], axis=1)

# Specify the path for the new CSV file
new_csv_file_path = 'Person.csv'
ampersand_csv_file_path = 'Family_With_Ampersand.csv'

# Save the updated DataFrame to a new CSV file
df.to_csv(new_csv_file_path, index=False)
rows_with_ampersand_df.to_csv(ampersand_csv_file_path, index=False)

print(f"Data has been extracted and saved to {new_csv_file_path}")
print(f"Rows with '&' in 'family' have been saved to {ampersand_csv_file_path}")

#episode_data
import pandas as pd

# Replace 'parks_and_rec_imdb.csv' with the actual path to your CSV file
csv_file_path = 'parks_and_rec_imdb.csv'

# Read the CSV file into a DataFrame
df = pd.read_csv(csv_file_path)

# Select the desired attributes
selected_attributes = ['season', 'episode_num', 'title', 'original_air_date','desc']
print(df.columns)

# Create a new DataFrame with only the selected attributes
episode_data_df = df[selected_attributes]

# Specify the path for the new CSV file
new_csv_file_path = 'episode_data.csv'

# Save the DataFrame with selected attributes to a new CSV file
episode_data_df.to_csv(new_csv_file_path, index=False)

print(f"Selected episode data has been saved to {new_csv_file_path}")

#Viewers_data
import pandas as pd

# Replace 'parks_and_rec_imdb.csv' and 'episode_data.csv' with the actual paths to your CSV files
imdb_csv_path = 'parks_and_rec_imdb.csv'
episode_data_csv_path = 'parks_and_rec_episodes (2).csv'

# Read specific columns from the IMDb CSV file into a DataFrame
imdb_df = pd.read_csv(imdb_csv_path)[['imdb_rating', 'total_votes']]

# Read specific columns from the episode data CSV file into a DataFrame
episode_data_df = pd.read_csv(episode_data_csv_path)[['us_viewers']]

# Concatenate the two DataFrames horizontally
final_data_df = pd.concat([imdb_df, episode_data_df], axis=1)

# Specify the path for the new CSV file
new_csv_file_path = 'Viewers_data.csv'

# Save the concatenated DataFrame to a new CSV file
final_data_df.to_csv(new_csv_file_path, index=False)

print(f"Selected data has been saved to {new_csv_file_path}")